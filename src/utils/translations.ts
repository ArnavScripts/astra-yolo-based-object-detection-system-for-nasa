export type Language = 'en' | 'hi';

export interface Translations {
  // Navigation
  detection: string;
  advanced: string;
  analytics: string;
  setup: string;
  about: string;
  
  // Header
  title: string;
  subtitle: string;
  teamName: string;
  
  // Detection Upload
  uploadTitle: string;
  uploadDescription: string;
  dragDropText: string;
  browseFiles: string;
  supportedFormats: string;
  uploadNew: string;
  clear: string;
  processing: string;
  analyzing: string;
  
  // Detection Results
  resultsTitle: string;
  noResults: string;
  objectsDetected: string;
  confidence: string;
  class: string;
  
  // Camera
  cameraTitle: string;
  startCamera: string;
  stopCamera: string;
  capturePhoto: string;
  retry: string;
  live: string;
  
  // Model Config
  modelConfigTitle: string;
  modelType: string;
  roboflow: string;
  huggingface: string;
  custom: string;
  endpointUrl: string;
  apiKey: string;
  saveConfiguration: string;
  testConnection: string;
  
  // Stats
  detectionCount: string;
  totalObjects: string;
  historyCount: string;
  avgConfidence: string;
  
  // Buttons
  export: string;
  reset: string;
  compare: string;
  process: string;
  
  // Messages
  welcomeMessage: string;
  configureModelMessage: string;
  configureModelNow: string;
  noObjectsDetected: string;
  detectionSuccess: string;
  detectionFailed: string;
  
  // Chatbot
  chatbotTitle: string;
  chatbotPlaceholder: string;
  chatbotWelcome: string;
  askQuestion: string;
  
  // Language
  language: string;
  selectLanguage: string;
  
  // Safety Objects
  fireExtinguisher: string;
  oxygenTank: string;
  nitrogenTank: string;
  firstAidBox: string;
  fireAlarm: string;
  safetySwitchPanel: string;
  emergencyPhone: string;
}

export const translations: Record<Language, Translations> = {
  en: {
    // Navigation
    detection: 'Detection',
    advanced: 'Advanced',
    analytics: 'Analytics',
    setup: 'Setup',
    about: 'About',
    
    // Header
    title: 'ASTRA',
    subtitle: 'Automated Space Tracking and Recognition Algorithm',
    teamName: 'Caption',
    
    // Detection Upload
    uploadTitle: 'Upload Image for Detection',
    uploadDescription: 'Upload an image to detect safety objects with YOLOv8',
    dragDropText: 'Drag and drop an image here, or',
    browseFiles: 'Browse Files',
    supportedFormats: 'Supports JPG, PNG, WEBP (Max 10MB)',
    uploadNew: 'Upload New',
    clear: 'Clear',
    processing: 'Processing with YOLOv8...',
    analyzing: 'Analyzing image',
    
    // Detection Results
    resultsTitle: 'Detection Results',
    noResults: 'Upload an image to see detection results',
    objectsDetected: 'Objects Detected',
    confidence: 'Confidence',
    class: 'Class',
    
    // Camera
    cameraTitle: 'Camera Capture',
    startCamera: 'Start Camera',
    stopCamera: 'Stop Camera',
    capturePhoto: 'Capture Photo',
    retry: 'Retry',
    live: 'LIVE',
    
    // Model Config
    modelConfigTitle: 'Model Configuration',
    modelType: 'Model Type',
    roboflow: 'Roboflow',
    huggingface: 'Hugging Face',
    custom: 'Custom',
    endpointUrl: 'Endpoint URL',
    apiKey: 'API Key',
    saveConfiguration: 'Save Configuration',
    testConnection: 'Test Connection',
    
    // Stats
    detectionCount: 'Detection Count',
    totalObjects: 'Total Objects',
    historyCount: 'History',
    avgConfidence: 'Avg Confidence',
    
    // Buttons
    export: 'Export',
    reset: 'Reset',
    compare: 'Compare',
    process: 'Process',
    
    // Messages
    welcomeMessage: 'Welcome to ASTRA! ЁЯЪА',
    configureModelMessage: 'To start detecting safety objects, you need to configure your YOLO model endpoint first.',
    configureModelNow: 'Configure Model Now',
    noObjectsDetected: 'No objects detected in this image.',
    detectionSuccess: 'Detection complete!',
    detectionFailed: 'Detection failed. Please try again.',
    
    // Chatbot
    chatbotTitle: 'AI Assistant',
    chatbotPlaceholder: 'Ask me anything about ASTRA...',
    chatbotWelcome: 'Hello! I\'m your ASTRA AI assistant. How can I help you today?',
    askQuestion: 'Ask a question',
    
    // Language
    language: 'Language',
    selectLanguage: 'Select Language',
    
    // Safety Objects
    fireExtinguisher: 'Fire Extinguisher',
    oxygenTank: 'Oxygen Tank',
    nitrogenTank: 'Nitrogen Tank',
    firstAidBox: 'First Aid Box',
    fireAlarm: 'Fire Alarm',
    safetySwitchPanel: 'Safety Switch Panel',
    emergencyPhone: 'Emergency Phone',
  },
  
  hi: {
    // Navigation
    detection: 'рдкрд╣рдЪрд╛рди',
    advanced: 'рдЙрдиреНрдирдд',
    analytics: 'рд╡рд┐рд╢реНрд▓реЗрд╖рдг',
    setup: 'рд╕реЗрдЯрдЕрдк',
    about: 'рдкрд░рд┐рдЪрдп',
    
    // Header
    title: 'ASTRA',
    subtitle: 'рд╕реНрд╡рдЪрд╛рд▓рд┐рдд рдЕрдВрддрд░рд┐рдХреНрд╖ рдЯреНрд░реИрдХрд┐рдВрдЧ рдФрд░ рдкрд╣рдЪрд╛рди рдПрд▓реНрдЧреЛрд░рд┐рдердо',
    teamName: 'Caption',
    
    // Detection Upload
    uploadTitle: 'рдкрд╣рдЪрд╛рди рдХреЗ рд▓рд┐рдП рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ',
    uploadDescription: 'YOLOv8 рдХреЗ рд╕рд╛рде рд╕реБрд░рдХреНрд╖рд╛ рд╡рд╕реНрддреБрдУрдВ рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ',
    dragDropText: 'рдпрд╣рд╛рдВ рдПрдХ рдЫрд╡рд┐ рдЦреАрдВрдЪреЗрдВ рдФрд░ рдЫреЛрдбрд╝реЗрдВ, рдпрд╛',
    browseFiles: 'рдлрд╝рд╛рдЗрд▓реЗрдВ рдмреНрд░рд╛рдЙрдЬрд╝ рдХрд░реЗрдВ',
    supportedFormats: 'JPG, PNG, WEBP рд╕рдорд░реНрдерд┐рдд (рдЕрдзрд┐рдХрддрдо 10MB)',
    uploadNew: 'рдирдпрд╛ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ',
    clear: 'рд╕рд╛рдлрд╝ рдХрд░реЗрдВ',
    processing: 'YOLOv8 рдХреЗ рд╕рд╛рде рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг...',
    analyzing: 'рдЫрд╡рд┐ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг',
    
    // Detection Results
    resultsTitle: 'рдкрд╣рдЪрд╛рди рдкрд░рд┐рдгрд╛рдо',
    noResults: 'рдкрд╣рдЪрд╛рди рдкрд░рд┐рдгрд╛рдо рджреЗрдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ',
    objectsDetected: 'рд╡рд╕реНрддреБрдПрдВ рдкрд╣рдЪрд╛рдиреА рдЧрдИрдВ',
    confidence: 'рд╡рд┐рд╢реНрд╡рд╛рд╕',
    class: 'рд╡рд░реНрдЧ',
    
    // Camera
    cameraTitle: 'рдХреИрдорд░рд╛ рдХреИрдкреНрдЪрд░',
    startCamera: 'рдХреИрдорд░рд╛ рд╢реБрд░реВ рдХрд░реЗрдВ',
    stopCamera: 'рдХреИрдорд░рд╛ рдмрдВрдж рдХрд░реЗрдВ',
    capturePhoto: 'рдлреЛрдЯреЛ рдХреИрдкреНрдЪрд░ рдХрд░реЗрдВ',
    retry: 'рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВ',
    live: 'рд▓рд╛рдЗрд╡',
    
    // Model Config
    modelConfigTitle: 'рдореЙрдбрд▓ рдХреЙрдиреНрдлрд╝рд┐рдЧрд░реЗрд╢рди',
    modelType: 'рдореЙрдбрд▓ рдкреНрд░рдХрд╛рд░',
    roboflow: 'Roboflow',
    huggingface: 'Hugging Face',
    custom: 'рдХрд╕реНрдЯрдо',
    endpointUrl: 'рдПрдВрдбрдкреЙрдЗрдВрдЯ URL',
    apiKey: 'API рдХреБрдВрдЬреА',
    saveConfiguration: 'рдХреЙрдиреНрдлрд╝рд┐рдЧрд░реЗрд╢рди рд╕рд╣реЗрдЬреЗрдВ',
    testConnection: 'рдХрдиреЗрдХреНрд╢рди рдкрд░реАрдХреНрд╖рдг рдХрд░реЗрдВ',
    
    // Stats
    detectionCount: 'рдкрд╣рдЪрд╛рди рдЧрдгрдирд╛',
    totalObjects: 'рдХреБрд▓ рд╡рд╕реНрддреБрдПрдВ',
    historyCount: 'рдЗрддрд┐рд╣рд╛рд╕',
    avgConfidence: 'рдФрд╕рдд рд╡рд┐рд╢реНрд╡рд╛рд╕',
    
    // Buttons
    export: 'рдирд┐рд░реНрдпрд╛рдд',
    reset: 'рд░реАрд╕реЗрдЯ',
    compare: 'рддреБрд▓рдирд╛',
    process: 'рдкреНрд░рдХреНрд░рд┐рдпрд╛',
    
    // Messages
    welcomeMessage: 'ASTRA рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯЪА',
    configureModelMessage: 'рд╕реБрд░рдХреНрд╖рд╛ рд╡рд╕реНрддреБрдУрдВ рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдирд╛ рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП, рдЖрдкрдХреЛ рдкрд╣рд▓реЗ рдЕрдкрдиреЗ YOLO рдореЙрдбрд▓ рдПрдВрдбрдкреЙрдЗрдВрдЯ рдХреЛ рдХреЙрдиреНрдлрд╝рд┐рдЧрд░ рдХрд░рдирд╛ рд╣реЛрдЧрд╛ред',
    configureModelNow: 'рдЕрднреА рдореЙрдбрд▓ рдХреЙрдиреНрдлрд╝рд┐рдЧрд░ рдХрд░реЗрдВ',
    noObjectsDetected: 'рдЗрд╕ рдЫрд╡рд┐ рдореЗрдВ рдХреЛрдИ рд╡рд╕реНрддреБ рдирд╣реАрдВ рдорд┐рд▓реАред',
    detectionSuccess: 'рдкрд╣рдЪрд╛рди рдкреВрд░реНрдг!',
    detectionFailed: 'рдкрд╣рдЪрд╛рди рд╡рд┐рдлрд▓ред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред',
    
    // Chatbot
    chatbotTitle: 'AI рд╕рд╣рд╛рдпрдХ',
    chatbotPlaceholder: 'ASTRA рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдореБрдЭрд╕реЗ рдХреБрдЫ рднреА рдкреВрдЫреЗрдВ...',
    chatbotWelcome: 'рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ ASTRA AI рд╕рд╣рд╛рдпрдХ рд╣реВрдВред рдЖрдЬ рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?',
    askQuestion: 'рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ',
    
    // Language
    language: 'рднрд╛рд╖рд╛',
    selectLanguage: 'рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
    
    // Safety Objects
    fireExtinguisher: 'рдЕрдЧреНрдирд┐рд╢рд╛рдордХ рдпрдВрддреНрд░',
    oxygenTank: 'рдСрдХреНрд╕реАрдЬрди рдЯреИрдВрдХ',
    nitrogenTank: 'рдирд╛рдЗрдЯреНрд░реЛрдЬрди рдЯреИрдВрдХ',
    firstAidBox: 'рдкреНрд░рд╛рдердорд┐рдХ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдмреЙрдХреНрд╕',
    fireAlarm: 'рдЖрдЧ рдЕрд▓рд╛рд░реНрдо',
    safetySwitchPanel: 'рд╕реБрд░рдХреНрд╖рд╛ рд╕реНрд╡рд┐рдЪ рдкреИрдирд▓',
    emergencyPhone: 'рдЖрдкрд╛рддрдХрд╛рд▓реАрди рдлреЛрди',
  },
};

export function getTranslation(language: Language): Translations {
  return translations[language] || translations.en;
}
